version: '3.9'

services:
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: escape_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - backend

  database-service:
    build: ./database-service
    container_name: database-service
    ports:
      - "3004:3004"
    env_file:
      - ./database-service/.env
    depends_on:
      - mysql
    networks:
      - backend

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "3001:3001"
    env_file:
      - ./auth-service/.env
    depends_on:
      - database-service
    networks:
      - backend

  booking-service:
    build: ./booking-service
    container_name: booking-service
    ports:
      - "3002:3002"
    env_file:
      - ./booking-service/.env
    depends_on:
      - database-service
    networks:
      - backend

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "3003:3003"
    env_file:
      - ./notification-service/.env
    depends_on:
      - database-service
    networks:
      - backend
  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - backend

  kong-migrations:
    image: kong:3.5
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - backend

  kong:
    image: kong:3.5
    container_name: kong
    restart: always
    depends_on:
      - kong-migrations
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000" # public proxy
      - "8001:8001" # admin API
    networks:
      - backend

networks:
  backend:

volumes:
  mysql_data:
  kong_data: